%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 24.04.0 (http://poppler.freedesktop.org)
%%Creator: Chromium
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 526 376
%%HiResBoundingBox: 0 0 525.12 375.12
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011, 2022 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font Verdana
/Verdana_sfnts [
<00010000000b008000030030637674204ca24102000000bc000001986670676d
a092abe6000002540000023a676c7966188d382a0000049000000cc468656164
d4133d320000115400000036686865610fac09d70000118c00000024686d7478
3ec10761000011b0000001446c6f636161446652000012f4000000a46d617870
02d102cc0000139800000020707265700870ef40000013b8000002fc76686561
00020801000016b400000024766d747808000000000016d8000000a400>
<061e061405f005d1047c045d03dd00100000ffe7ffe1fe78fe64fe590394001f
0000009600aa00b900c600ce000000000000000000bc00c200000000007600b2
00c000cb0000000000000000000000000081009400a600cc00da00ef00000000
000000000098009e00ab00b000000000000000000000000000900098009e00a4
00a900ae00b300ba00c3000000880091009800a500ac00000000000000000000
006f0087008f009b00a000d3011d00000000000000c3021401c20000000000e9
000c02d10173018e001a002c0044005c0073007e008600b200c8014c001a003d
00440050005c00720078009200b200b900c80000000000000000000000000000
00000000003d0056005d006a006e00b100b900c100000000002a003d00540064
006a00b100b90000000000000071007a008900a100a700bb006f007a00870091
009a000000000000000000000000000000000000008102210221007400e500b9
00ca019502c600ac00a700850614000a000005d1001f0000045d001f00000000
ffe10000fe64fff50000036202f402a2029100af026a004c00>
<401555543736322f2e2d2c26251f141312110d0c0504022c20b0032545234523
61688a204568208a234460442d2c4b525845441b2121592d2c202045684420b0
01602045b0467668188a4560442d2cb0122bb0022545b00225456ab0408b60b0
022523442121212d2cb0132bb0022545b00225456ab8ffc08c60b00225234421
21212d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2cb100032545685458b0032545b0032545606820b004252344b00425
23441bb00325204568208a2344b00325456860b003252344592d2cb003252045
68208a2344b00325456860b0032523442d2cb00943588721c01bb01243588745
b0112bb0472344b0477ae41b038a45186920b04723448a8a8720b0a05158b011
2bb0472344b0477ae41b21b0477ae4595959182d2c4b525845441b2121592d2c
462346608a8a462320468a608a61b8ff8062232010238ab14b4b8a70456020b0
005058b00161b8ffba8b1bb0468c59b0106068013a2d2c2045b003254652583f
1b2111592d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000
621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2cb0134358031b02592d2c4b
53234b515a5820458a60441b2121592d2c4b53234b515a58381b2121592d2cb1
020042b123018851b1400188535a58b910000020885458b20201024360425959
2d2cb0024354584b53234b515a58381b2121591b21212121592d000000>
<00020100000007000600000300070014b706020400060204002fcdddcd002fcd
ddcd3130211121112521112101000600fa800500fb000600fa0080050000000000>
<00050095ffe3080705ed000b000f001b00270033009c40720908060a0918061a
0f351808170a1818171a2908260a2918261a460d480f4035560d580f680e1379
1f7625792b76310425512f034f030203031f5109020f030e082b512019401902
19193151130a4f0c400e020c0e2e2a0016011616282a0c0e060f10401002101c
2a0f00010000222a10062f33ed332f5ded2f5d123939ed332f5ded2f2f5d003f
ed332f5ded3f3f3fed332f5ded5d3130015d0114062322263534363332162501
2309011406232226353436333216013426232206151416333236013426232206
1514163332360374bdb2b6babeb2b5ba02b3fcf4a5030c0285beb2b5babdb2b6
bafabb5964665858666459049359646658586664590434e0dadadfe0dadcc0fa
2f05d1fbcce0dadcdde0dada01b8ac8888adad8787fe17ac8888adad8787000000>
<000100a10000049105f0002000e14051501f601f02050306111603151124113b
05380d350e3f1d3f1e391f4b05480d450e4f1d4f1e491f5f035d045d055b0956
115f195e1b5d1c5f1d5f1e6a036406651162156f1e700274117f1a7f1c7f1e25
03b8ffe8b40c0c065502b8ffe8403f0c0c0655000f100f2d082f1c300f400f06
0f400c0c02550f400c0d06550f0f0b4a1302021f4a01081f020821160c0f0f02
55160c0909025516040b0b025516b8fff440190c0c025516160c0c0655161620
9e220f221f2202101002992110f6322f5d10f6322f2b2b2b2b2bed1239003ffd
323fed332f2b2b5d31302b2b5d015d2121353636373636353426232206072335
363633320415140607060607060607210491fc1069d35bc08e99895bd4650a47
ed6fe501042b2a27694b6be4630321d15ab459badb7f74834042d2233addbd55
93423e784969c55400>
<000100bbffe1048505d1002a0097403d0a081a082b083d0835113d164b084411
5a0854296a087a080c1d1d1a490f251f2540250325214a25061e020f0a1f0a02
0a0a0e4a060a2022204f1d011db8ffec402e0b0b02551d160c0c02551d0e0d0d
02551d100c0c06551d142100201d0900160c0c0255009f2c0f2c1f2c02099b2b
10e65d10e62b11393910ed2f2b2b2b2b5ded2f003fed332f5d3f1239ed2f5dfd
322f31305d011406070606232226273533161633323637363635342627262623
2206071121152111363633321617161604854c4248c7837ae24e0e52dc6a4785
342c2d352f34955c58a33b0380fd412b5a2179b64c505801d968be41464b3324
d3344928322b784f4d6a20261f180c02ffaffe740404293437ae000000>
<0001009a0000049505d10006004f403209010a02240148014b02580279030703
01000120020203000002034a050302080f081f087b020303000202040f000100
00042f332f5d12392f12395d003f3ffd11392f3130018710ed87c0015d010123
012135210495fd5ed602cdfcb003fb04f2fb0e0522af000000>
<000100c80000047f05d10009009bb2053502b8ffc040150f0f02550202070135
0803070800034f0b02030300b8ffd4401a0d0d065500640b0f0b010205010c0c
06550514070e1010025507b8fffcb40b0b025507b8ffda400b0f0f0255070809
09025507b8ffeeb40c0c025507b8ffeab40d0d025507b8ffe0b40d0d065507b8
ffecb60c0c0655076c0a10f62b2b2b2b2b2b2b2bfd2b325d10f42b322f5d003f
3fed12392f2bed313001211121152111231121047ffd0f0287fd79c603b70521
fe5cb0fd3305d10000>
<000100c8000005f605d1000c0149405b560a0138023805360a6f0260036f0560
0a7f0270037f05700a0b5509560a5a0b0364037403750903050a020309060200
0204401010025504400909025504400d0d02550004100444045404040404070b
0903010708090a0b030502b8fffa400d0f0f02550214001e1010025500b8fff4
404d0b0b0255000c0f0f0255001009090255000a0c0c0255001a0d0d02550018
0d0d0655000c0c0c065500780e0f0e1f0e500e03050c09090255050c0c0c0255
05040c0c0655051307101010025507b8fffcb40b0b025507b8ffda400b0f0f02
5507080909025507b8ffeeb40c0c025507b8ffeab40d0d025507b8ffeab40d0d
065507b8ffeeb60c0c0655076c0d10f62b2b2b2b2b2b2b2bed2b2b2b5d10f62b
2b2b2b2b2b2b2bed2b111739003f3c3f3c12392f5d2b2b2b435458b434046a04
025d59435458b26404015d591217393130015d72005d72212311012301112311
2101012105f6c6fe6276fe65b9010e018d018001130503fc970369fafd05d1fc
c3033d0000>
<00020068ffe1041d047800260033016940590c0a0423190a1523042b120c0c06
552c120c0c06552d120c0c0655590e511e5c2c690e601d6f2d7b0a7a14701d7b
2c0a0208283d3011401102111120084f1c011c1c183f20043141080a01080f1d
011d112735400909025502b8fff4b40909025502b8fff4b40c0c025502b8fff4
40160c0c0655021a001d0b00061010025500120b0b025500b8ffe640110f0f02
55001809090255001a0d0d025500b8fffcb40c0c025500b8ffe0400b0f0f0655
00120c0c065500b8fff4401509090655000f0d0d06550091350f351f353f3503
2eb8fff8b40d0d02552eb8fff4400d0f0f06552e080c0c06552e1b0bb8fffa40
37101002550b0c0b0b02550b080d0d02550b1c090902550b0c0d0d02550b060c
0c02550b16090906550b060c0c06550b0a0d0d06550b853410f62b2b2b2b2b2b
2b2b2bed2b2b2b5d10e62b2b2b2b2b2b2b2b2b2b113910fd2b2b2b2b32322f5d
003f3fed3fed332f5d1112392f5ded123931305d2b2b2b015d21233506060706
0623222635343637362437353426272626232206072335363633321617161615
03110606070606151416333236041dbb1955282f7a5297d26d6566011ea42d2a
28703d4ab6610a37d06576af403f42bb56e9445164747763a477113d12171fc8
9b7f9d2d2d20081d40541817102725bf0f24272f2e926cfe1d01370514131761
5560614d00>
<0002006affe60460047c0018001f00c8402726042b0d30043b0d3c1e43044b0d
4b1e5a0d50166a0d6017780d7a1e0e013c1f1f0f1c3d15040bb8ffe840190c0c
06550b0b073f0f090c0c21400909025521400c0c025519b8fff6400d0c0c0255
191a00200c0c025500b8fff440440d0d0655008f210f211f213f21031f010c0c
0c0255010a0c0c0655011b12180b0b025512100909025512080c0c025512040d
0d0255120a0c0c065512020d0d065512852010f62b2b2b2b2b2bfd2b2b325d10
f42b2bed2b2b2b332f003fed332f2b3fed12392fed31305d0121141617161633
3236373315060623200011100033321215272626232206070460fcc93e36348f
5672e7310a5fc66dfeeafec8012bf4e2f5b701939697b30c021b67993130305b
2ccd2836012d011501120142fef8f32a94a2b28400>
<000100bb0000017706140003007d4027020101087f05010592000c0909025500
0c0c0c0255000809090655000c0c0c0655001a7f010101b8ffdeb41010025501
b8ffe0400b0f0f0255010c0909025501b8ffeeb40d0d025501b8fff6400b0c0c
025501040909065501b8fff8b60909065501880410f62b2b2b2b2b2b2b5dfd2b
2b2b2be65d003f3f313001212311330177bcbc061400000000>
<000100b900000717047c002b01c8404b032403291324132944204426b72a07b6
2501251f1d1c0817422822041d0501101c08402d011f2d302d402d502d702d05
000c09090255000c0c0c0255000809090655000c0c0c0655001a2db8ffc04017
0f0f02552d400c0c025501181010025501080b0b025501b8ffeab40f0f025501
b8fff440110909025501300c0c0255011c0d0d025501b8fff2b40f0f065501b8
fff0402b0909065501020d0d0655016110250b1c0f0c090902550f0c0c0c0255
0f08090906550f0c0c0c06550f1a10b8fff6400b1010025510080b0b025510b8
ffd240110f0f025510260c0c0255100a0d0d025510b8fff8b40f0f065510b8ff
f8b40909065510b8fffbb40c0c065510b8ffff40210d0d0655101f1a0c090902
551a0c0c0c02551a08090906551a0c0c0c06551a1a1cb8ffdeb4101002551cb8
ffe6400b0f0f02551c0c090902551cb8fff6b40c0c02551cb8ffeeb40d0d0255
1cb8ffee400b0f0f06551c0a090906551cb8fffcb40c0c06551cb8fffc400e0d
0d06551c611f104010801003102f5df42b2b2b2b2b2b2b2b2bfd2b2b2b2b3210
2b2b2b2b2b2b2b2b2bfd2b2b2b2b11393910f42b2b2b2b2b2b2b2b2b2b2bed2b
2b2b2b5d5d003f3c3c3f3f3cfd32111239395d31305d21231134262726262322
0607161615112311342627262623220607112311331536363332161736363332
16150717bc0d151756514f9e4f0304bc0d151756514d9b4dbcbc58af63729f27
72bc6bb8af027c4886282b2c4f3d173d1efd35027c4a85282b2b4c3bfcbe045d
7c495260556055dfc800000000>
<000100000005028fd663a14e5f0f3cf5001b080000000000aa7e442900000000
c2c3abe8fc0bfd930b93080100000009000200000000000000>
<00010000080bfe5200000c2cfc0bff070b930001000000000000000000000000
0000005100>
<0800010000000000000000000000000000000000000000000000000000000000
089c009500000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000051600a10000000000000000
051600bb000000000516009a0000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000049900c8000000000000000000000000000000000000000000000000
06be00c800000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000004ce0068000000000000000000000000
04c4006a000000000000000000000000000000000000000000000000023200bb
07c800b900>
<00000020002000200020002000200020002000c000c000c000c000c000c000c0
00c000c000c000c000c000c001640164016401f201f2022e022e022e022e022e
022e022e022e022e022e022e022e022e022e022e029202920292029202920292
0292035403540354035403540354035403540354035403540354035403540354
03540354035403540354045604560456045604f004f004f004f004f004f004f0
053c066200>
<00010000005100670007006b000500020010002f00560000020a01c80003000100>
<b90054ffc0401eb229323610b220b240b250b270b280b2a0b2b0b2d0b2e0b20a
c0b2f0b202b8ffc04070b51718361f44010f561f56024f555f55026f54019f54
af54025153170452531604535215044a49520446493704474932044849320449
3539043c3f32043d3f3d043e3f2104433f1d04423f5204413f5204403f52043f
35320432336404333534043534540434351e04d034e034f03403b8ffeeb3b425
4836b8ffe0b3b4102336b8ffee400db4090f36b41a480476b386b302b8fff0b3
b3254836b8fffa40ffb3092436b314480489881304706c7078020f9cdf9e0240
9d161936409c161b3640971719364096171b368685131f0f840f850f8e0f8f0f
901f841f8e1f8f2f8e808580888f919085908790880f40820910360f721f7202
4071090c360f6d0120c80120c7013fc6efc60220c540c5020062010062106202
4061a061020f5b012d1411042c1425042b1439042a141304291415041f141e04
2120430420143c04c91a45041a1b47041b1a3c041a1432041514390413144804
12141a0411141a0470140140144143360f0e2a1f0006010dc34b1f0cc24b1f0a
c04b1f09c04b1f05bc4b1f04bd4b1f03b94b1f02ba4b1f01b64b1f00b74b1fc3
c22a1fc0bf2a1fbd4056bc211fbab9211fb7b6211fc2c3c40dbfc0c10dbcbdbe
0cb9babb0cb6b7b80c10bc80bc0240b980b9020fb63fb64fb67fb6040fb62fb6
3fb66fb67fb6bfb6cfb6ffb6080a0937040c0d02050402030202010002500501
b801ff01b0124b004b5442b013014b004b5342b109322b4bb0645242858d8d1d
b0964b5258b0801d59b808004b5458b001b0018e59b0084b5358b001b0018e59
002b2b2b2b2b737473732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb003
45b006456861b006234473b00345b00e456861b00e2344b00e45b00f456861b0
0f23442b01b0144568b01423442b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73
73737373737373732b732b732b2b2b2b2b73732b2b2b2b732b2b2b2b00752b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73747373742b73742b2b00>
<0001000000000000000008000000000000000000000100000000000000000000
0000000100>
<0800000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000>
] def
10 dict begin
/FontName /Verdana_00 def
/FontType 42 def
/FontMatrix [1 0 0 1 0 0] def
/FontBBox [-1013 -621 2963 2049] def
/PaintType 0 def
/sfnts Verdana_sfnts def
/Encoding 256 array
dup 0 /c00 put
dup 1 /c01 put
dup 2 /c02 put
dup 3 /c03 put
dup 4 /c04 put
dup 5 /c05 put
dup 6 /c06 put
dup 7 /c07 put
dup 8 /c08 put
dup 9 /c09 put
dup 10 /c0a put
dup 11 /c0b put
dup 12 /c0c put
dup 13 /c0d put
dup 14 /c0e put
dup 15 /c0f put
dup 16 /c10 put
dup 17 /c11 put
dup 18 /c12 put
dup 19 /c13 put
dup 20 /c14 put
dup 21 /c15 put
dup 22 /c16 put
dup 23 /c17 put
dup 24 /c18 put
dup 25 /c19 put
dup 26 /c1a put
dup 27 /c1b put
dup 28 /c1c put
dup 29 /c1d put
dup 30 /c1e put
dup 31 /c1f put
dup 32 /c20 put
dup 33 /c21 put
dup 34 /c22 put
dup 35 /c23 put
dup 36 /c24 put
dup 37 /c25 put
dup 38 /c26 put
dup 39 /c27 put
dup 40 /c28 put
dup 41 /c29 put
dup 42 /c2a put
dup 43 /c2b put
dup 44 /c2c put
dup 45 /c2d put
dup 46 /c2e put
dup 47 /c2f put
dup 48 /c30 put
dup 49 /c31 put
dup 50 /c32 put
dup 51 /c33 put
dup 52 /c34 put
dup 53 /c35 put
dup 54 /c36 put
dup 55 /c37 put
dup 56 /c38 put
dup 57 /c39 put
dup 58 /c3a put
dup 59 /c3b put
dup 60 /c3c put
dup 61 /c3d put
dup 62 /c3e put
dup 63 /c3f put
dup 64 /c40 put
dup 65 /c41 put
dup 66 /c42 put
dup 67 /c43 put
dup 68 /c44 put
dup 69 /c45 put
dup 70 /c46 put
dup 71 /c47 put
dup 72 /c48 put
dup 73 /c49 put
dup 74 /c4a put
dup 75 /c4b put
dup 76 /c4c put
dup 77 /c4d put
dup 78 /c4e put
dup 79 /c4f put
dup 80 /c50 put
readonly def
/CharStrings 257 dict dup begin
/.notdef 0 def
/c00 0 def
/c01 1 def
/c02 2 def
/c03 3 def
/c04 4 def
/c05 5 def
/c06 6 def
/c07 7 def
/c08 8 def
/c09 9 def
/c0a 10 def
/c0b 11 def
/c0c 12 def
/c0d 13 def
/c0e 14 def
/c0f 15 def
/c10 16 def
/c11 17 def
/c12 18 def
/c13 19 def
/c14 20 def
/c15 21 def
/c16 22 def
/c17 23 def
/c18 24 def
/c19 25 def
/c1a 26 def
/c1b 27 def
/c1c 28 def
/c1d 29 def
/c1e 30 def
/c1f 31 def
/c20 32 def
/c21 33 def
/c22 34 def
/c23 35 def
/c24 36 def
/c25 37 def
/c26 38 def
/c27 39 def
/c28 40 def
/c29 41 def
/c2a 42 def
/c2b 43 def
/c2c 44 def
/c2d 45 def
/c2e 46 def
/c2f 47 def
/c30 48 def
/c31 49 def
/c32 50 def
/c33 51 def
/c34 52 def
/c35 53 def
/c36 54 def
/c37 55 def
/c38 56 def
/c39 57 def
/c3a 58 def
/c3b 59 def
/c3c 60 def
/c3d 61 def
/c3e 62 def
/c3f 63 def
/c40 64 def
/c41 65 def
/c42 66 def
/c43 67 def
/c44 68 def
/c45 69 def
/c46 70 def
/c47 71 def
/c48 72 def
/c49 73 def
/c4a 74 def
/c4b 75 def
/c4c 76 def
/c4d 77 def
/c4e 78 def
/c4f 79 def
/c50 80 def
end readonly def
FontName currentdict end definefont pop
16 dict begin
/FontName /Verdana def
/FontType 0 def
/FontMatrix [1 0 0 1 0 0] def
/FMapType 2 def
/Encoding [
0
] def
/FDepVector [
/Verdana_00 findfont
] def
FontName currentdict end definefont pop
%%EndResource
/F4_0 /Verdana 0 pdfMakeFont16
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 525.12 375.12 re
W
q
[0.24 0 0 -0.24 0 375.12] cm
q
0 0 2187.5 1562.5 re
W*
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 700 500 re
f
Q
Q
q
0 0 2187.5 1562.5 re
W*
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[1 0.7529 0.7961] SC
/DeviceRGB {} cs
[1 0.7529 0.7961] sc
334.5 260 m
334.5 100 l
337.11853 100 339.73547 100.06424 342.35083 100.192726 c
344.96619 100.321213 347.57681 100.513779 350.18274 100.770439 c
352.78867 101.0271 355.38669 101.347534 357.97681 101.731743 c
360.56699 102.115967 363.14621 102.563499 365.71442 103.074348 c
368.28262 103.58519 370.83673 104.158737 373.37677 104.794983 c
375.91684 105.431236 378.43976 106.129417 380.94553 106.889534 c
383.45129 107.649651 385.93689 108.470787 388.40231 109.352936 c
390.8678 110.235085 393.31012 111.177193 395.72931 112.17926 c
398.1485 113.181328 400.54166 114.242134 402.90875 115.361694 c
405.27588 116.481255 407.61411 117.658218 409.92343 118.892586 c
412.23273 120.126953 414.51038 121.417229 416.75635 122.763412 c
419.00235 124.109604 421.21396 125.510086 423.39117 126.964851 c
425.56839 128.419617 427.70859 129.926926 429.81183 131.486786 c
431.91507 133.046631 433.97876 134.657135 436.00293 136.318314 c
438.02707 137.979492 440.00922 139.689316 441.94943 141.447815 c
443.88959 143.206299 445.78546 145.011322 447.63705 146.8629 c
449.48862 148.714478 451.29364 150.610352 453.05215 152.550552 c
454.81061 154.490753 456.52045 156.472916 458.18161 158.49707 c
459.84277 160.521194 461.45328 162.584869 463.01312 164.688095 c
464.57297 166.79129 466.08026 168.93152 467.53506 171.10875 c
468.98984 173.28596 470.39032 175.49757 471.73654 177.74356 c
473.08273 179.98953 474.37302 182.26718 475.60736 184.57652 c
476.84171 186.88585 478.01868 189.22406 479.13824 191.59117 c
480.25781 193.95828 481.31863 196.35144 482.32068 198.77065 c
483.32272 201.18983 484.26483 203.63216 485.14697 206.09761 c
486.02914 208.56306 486.85028 211.04868 487.61041 213.55446 c
488.37051 216.06021 489.0687 218.58311 489.70496 221.12315 c
490.34122 223.66321 490.91476 226.21733 491.4256 228.78554 c
491.93643 231.35374 492.38397 233.93294 492.76819 236.52312 c
493.15244 239.11331 493.47287 241.71136 493.72955 244.31728 c
493.98621 246.92319 494.17877 249.53381 494.30728 252.14919 c
494.43576 254.76453 494.5 257.38147 494.5 260 c
494.5 262.6185 494.43576 265.23544 494.30725 267.85083 c
494.17877 270.46619 493.98621 273.07681 493.72952 275.68274 c
493.47287 278.28867 493.15244 280.88669 492.76819 283.47687 c
492.38397 286.06705 491.93643 288.64624 491.4256 291.21445 c
490.91476 293.78265 490.34122 296.33676 489.70496 298.87683 c
489.0687 301.41687 488.37051 303.93979 487.61041 306.44556 c
486.85028 308.95132 486.02914 311.43695 485.147 313.90237 c
484.26483 316.36783 483.32272 318.81015 482.32068 321.22934 c
481.31863 323.64853 480.25781 326.04169 479.13821 328.40881 c
478.01868 330.77594 476.84171 333.11417 475.60736 335.42349 c
474.37302 337.73282 473.08273 340.01047 471.73651 342.25644 c
470.39032 344.50241 468.98984 346.71402 467.53506 348.89124 c
466.08026 351.06848 464.57297 353.20871 463.01312 355.31189 c
461.45328 357.41513 459.8428 359.47879 458.18164 361.50293 c
456.52048 363.52707 454.81064 365.50922 453.05215 367.4494 c
451.29364 369.38962 449.48862 371.28549 447.63705 373.13708 c
445.78546 374.98865 443.88959 376.79367 441.9494 378.55215 c
440.00919 380.31064 438.02704 382.02048 436.0029 383.68167 c
433.97873 385.34283 431.91504 386.95334 429.8118 388.51315 c
427.70859 390.073 425.56836 391.58032 423.39114 393.0351 c
421.21393 394.48987 419.00235 395.89035 416.75635 397.23654 c
414.51038 398.58273 412.23273 399.87302 409.92343 401.10739 c
407.61411 402.34174 405.27588 403.51871 402.90878 404.63824 c
400.54166 405.75778 398.1485 406.8186 395.72931 407.82068 c
393.31012 408.82275 390.8678 409.76486 388.40234 410.64703 c
385.93689 411.52921 383.45129 412.35034 380.94553 413.11047 c
378.43976 413.87057 375.91684 414.56876 373.37677 415.20499 c
370.83673 415.84125 368.28262 416.41479 365.71442 416.92563 c
363.14621 417.43649 360.56702 417.88403 357.97684 418.26825 c
355.38669 418.65247 352.78867 418.9729 350.18274 419.22955 c
347.57681 419.48621 344.96619 419.67877 342.35083 419.80728 c
339.73547 419.93573 337.11853 419.99997 334.5 420 c
331.88147 419.99997 329.26453 419.93573 326.64914 419.80728 c
324.03378 419.67877 321.42316 419.48621 318.81723 419.22955 c
316.2113 418.9729 313.61328 418.65247 311.0231 418.26822 c
308.43292 417.88403 305.85373 417.43649 303.28552 416.92563 c
300.71732 416.41479 298.16318 415.84125 295.62317 415.20499 c
293.0831 414.56876 290.56021 413.87057 288.05444 413.11047 c
285.54868 412.35034 283.06305 411.52921 280.5976 410.64706 c
278.13214 409.76489 275.68982 408.82278 273.27063 407.82071 c
270.85141 406.81866 268.45825 405.75784 266.09116 404.63828 c
263.72406 403.51874 261.38583 402.34177 259.07651 401.10742 c
256.76718 399.87302 254.48952 398.58273 252.24355 397.23654 c
249.99756 395.89035 247.78596 394.48987 245.60875 393.03513 c
243.43152 391.58035 241.29131 390.07306 239.1881 388.51321 c
237.08488 386.95337 235.02121 385.34286 232.99707 383.6817 c
230.97292 382.02051 228.99075 380.31067 227.05055 378.55215 c
225.11035 376.79367 223.21448 374.98865 221.3629 373.13708 c
219.51132 371.28549 217.70628 369.38962 215.9478 367.44943 c
214.18932 365.50922 212.47949 363.52707 210.81831 361.50293 c
209.15714 359.47879 207.54662 357.41513 205.98677 355.31192 c
204.42693 353.20871 202.91962 351.06848 201.46484 348.89124 c
200.01006 346.71402 198.60957 344.50241 197.2634 342.25644 c
195.91722 340.01047 194.62695 337.73282 193.39259 335.42349 c
192.15823 333.11417 190.98126 330.77594 189.86171 328.40881 c
188.74213 326.04169 187.6813 323.64853 186.67924 321.22934 c
185.67719 318.81015 184.73508 316.36783 183.85292 313.90237 c
182.97078 311.43695 182.14966 308.95132 181.38954 306.44556 c
180.62943 303.93979 179.93123 301.41687 179.29498 298.87683 c
178.65874 296.33676 178.08519 293.78265 177.57434 291.21445 c
177.06349 288.64624 176.61597 286.06705 176.23177 283.47687 c
175.84755 280.88669 175.52711 278.28867 175.27045 275.68274 c
175.01378 273.07681 174.82121 270.46619 174.69273 267.85083 c
174.56424 265.23544 174.5 262.6185 174.5 260 c
334.5 260 l
h
f
Q
q
[3.125 0 0 3.125 1222.08923 1004.12042] cm
/DeviceRGB {} CS
[0.2667 0.2667 0.2667] SC
/DeviceRGB {} cs
[0.2667 0.2667 0.2667] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 -14.085938 0] Tm
0 0 Td
/F4_0 12 Tf
(\000\032\000\030\000\010)
[7.628906
0
7.628906
0
12.914063
0] Tj
Q
q
[3.125 0 0 3.125 0 0] cm
/DeviceRGB {} CS
[0 0 1] SC
/DeviceRGB {} cs
[0 0 1] sc
334.5 260 m
174.5 260 l
174.5 257.38147 174.56424 254.76453 174.69273 252.14917 c
174.82121 249.5338 175.01378 246.92317 175.27045 244.31726 c
175.52711 241.71135 175.84755 239.11331 176.23175 236.52312 c
176.61597 233.93294 177.06351 231.35374 177.57436 228.78552 c
178.08521 226.21733 178.65874 223.66321 179.29498 221.12315 c
179.93124 218.58311 180.62944 216.06021 181.38956 213.55446 c
182.14967 211.04868 182.97079 208.56306 183.85295 206.09761 c
184.73511 203.63216 185.67722 201.18983 186.67928 198.77065 c
187.68134 196.35144 188.74214 193.9583 189.86172 191.59119 c
190.98128 189.22408 192.15825 186.88586 193.39261 184.57654 c
194.62697 182.26721 195.91724 179.98956 197.26343 177.74358 c
198.6096 175.49759 200.01009 173.286 201.46486 171.10876 c
202.91963 168.93153 204.42694 166.791321 205.98679 164.68811 c
207.54665 162.584885 209.15715 160.52121 210.81833 158.49707 c
212.47949 156.472931 214.18932 154.490768 215.94781 152.550568 c
217.70631 150.610367 219.51134 148.714493 221.36292 146.862915 c
223.21448 145.011337 225.11035 143.206314 227.05055 141.44783 c
228.99075 139.689331 230.97293 137.979507 232.99709 136.318329 c
235.02122 134.65715 237.0849 133.046646 239.18811 131.486786 c
241.29134 129.926926 243.43155 128.419617 245.60876 126.964851 c
247.78598 125.510086 249.99757 124.109604 252.24356 122.763412 c
254.48955 121.417229 256.76721 120.126953 259.07654 118.892586 c
261.38583 117.658226 263.72406 116.481262 266.09119 115.361702 c
268.45828 114.242142 270.85144 113.181335 273.27066 112.179268 c
275.68985 111.1772 278.13217 110.235085 280.59763 109.352936 c
283.06308 108.470787 285.54871 107.649651 288.05447 106.889534 c
290.56024 106.129417 293.08316 105.431236 295.62317 104.794983 c
298.16324 104.158737 300.71735 103.58519 303.28555 103.074348 c
305.85376 102.563499 308.43295 102.115967 311.02313 101.73175 c
313.61331 101.347542 316.21136 101.027107 318.81729 100.770447 c
321.42319 100.513786 324.03381 100.321213 326.64917 100.192726 c
329.26453 100.06424 331.88147 100 334.5 100 c
334.5 260 l
h
f
Q
q
[3.125 0 0 3.125 838.20569 620.23694] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 -14.085938 0] Tm
0 0 Td
/F4_0 12 Tf
(\000\025\000\030\000\010)
[7.628906
0
7.628906
0
12.914063
0] Tj
Q
q
[3.125 0 0 3.125 1872.4375 312.5] cm
/DeviceRGB {} CS
[1 1 1] SC
/DeviceRGB {} cs
[1 1 1] sc
0 0 89 48 re
f
Q
Q
q
1872.4375 312.5 278.125 150 re
W*
q
[3.125 0 0 3.125 1872.4375 357.8125] cm
/DeviceRGB {} CS
[0.1647 0.2471 0.3725] SC
/DeviceRGB {} cs
[0.1647 0.2471 0.3725] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 40 4.68] Tm
0 0 Td
/F4_0 12 Tf
(\0000\000D\000O\000H)
[10.113281
0
7.207031
0
3.292969
0
7.148438
0] Tj
Q
q
[3.125 0 0 3.125 1934.9375 357.8125] cm
/DeviceRGB {} CS
[1 0.7529 0.7961] SC
/DeviceRGB {} cs
[1 0.7529 0.7961] sc
-6 -6 12 12 re
f
Q
q
[3.125 0 0 3.125 1872.4375 417.1875] cm
/DeviceRGB {} CS
[0.1647 0.2471 0.3725] SC
/DeviceRGB {} cs
[0.1647 0.2471 0.3725] sc
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 -1 40 4.68] Tm
0 0 Td
/F4_0 12 Tf
(\000\)\000H\000P\000D\000O\000H)
[6.896484
0
7.148438
0
11.671875
0
7.207031
0
3.292969
0
7.148438
0] Tj
Q
q
[3.125 0 0 3.125 1934.9375 417.1875] cm
/DeviceRGB {} CS
[0 0 1] SC
/DeviceRGB {} cs
[0 0 1] sc
-6 -6 12 12 re
f
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font Verdana
%%EOF
